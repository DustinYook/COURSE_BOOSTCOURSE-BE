package kr.or.connect.guestbook.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import kr.or.connect.guestbook.dao.GuestbookDao;
import kr.or.connect.guestbook.dao.LogDao;
import kr.or.connect.guestbook.dto.Guestbook;
import kr.or.connect.guestbook.dto.Log;
import kr.or.connect.guestbook.service.GuestbookService;

@Service
public class GuestbookServiceImpl implements GuestbookService
{
	@Autowired
	GuestbookDao guestbookDao;
	
	@Autowired
	LogDao logDao;
	
	// guestbook 목록 가져옴
	@Override
	@Transactional // 읽기만 하는 메소드에 붙임 : 내부적으로 readOnly로 Connection을 사용
	public List<Guestbook> getGuestbooks(Integer start) 
	{	
		// 첫 번째 인자 : 시작, 두 번째 인자 : 몇 개 
		List<Guestbook> list = guestbookDao.selectAll(start, GuestbookService.LIMIT); 
		return list;
	}

	@Override
	public int deleteGuestbook(Long id, String ip) 
	{
		int deleteCount = guestbookDao.deleteById(id);
		
		// delete 수행 시 로그에 남김
		Log log = new Log();
		log.setId(id);
		log.setMethod("DELETE");
		log.setRegdate(new Date());
		
		logDao.insert(log); // DB에 반영
		
		return 0;
	}

	@Override
	public Guestbook addGuestbook(Guestbook guestbook, String ip) 
	{
		return null;
	}

	@Override
	public int getCount() 
	{
		return 0;
	}
}